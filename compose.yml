services:
  # NEXTJS
  # nextapp:
  #   container_name: nextapp
  #   image: nextapp:1.0.0
  #   build:
  #     context: ./frontend
  #     dockerfile: next.dockerfile
  #   ports:
  #     - 3000:3000
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:4000
  #   depends_on:
  #     - flaskapp

  # FLASK SERVICE
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: flask.dockerfile
    ports:
      - 4000:4000
    environment:
      - FLASK_ENV=development
      - FLASK_APP=/app/app.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=4000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - PYTHONUNBUFFERED=1
      - FLASK_DEBUG=1
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app

  # DB SERVICE
  db:
    container_name: db
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  pgdata: {}
